import Head from "next/head";
import { useState } from "react";
import axios from "axios";
import { Inter } from "@next/font/google";
import styles from "@/styles/home.module.css";
import stepstyles from "@/styles/stepdespanel.module.css";
import { toast } from "react-toastify";

const font = Inter({ subsets: ["latin"] });

interface StepDescriptonPanelProps {
  data: StepDataType;
}

const StepDescriptonPanel = ({ data }: StepDescriptonPanelProps) => {
  return (
    <div className={stepstyles.container}>
      <div className={stepstyles.content}>
        {Object.keys(data).length !== 0 ? (
          <>
            <p className={font.className}>&#123;</p>
            {Object.entries(data).map(([step, { carryString, sumString }]) => (
              <div key={step}>
                <div className={font.className}>{step}</div>
                <div className={font.className}>: &#123; "carryString":</div>
                <div className={font.className}>{carryString}</div>
                <div className={font.className}>, "sumString":</div>
                <div className={font.className}>{sumString}</div>
                <div className={font.className}>&#125;,</div>
              </div>
            ))}
            <p className={font.className}>&#125;</p>
          </>
        ) : (
          <></>
        )}
      </div>
    </div>
  );
};

export default function Home() {
  const [firstValue, setFirstValue] = useState<string>();
  const [secondValue, setSecondValue] = useState<string>();
  const [stepData, setStepData] = useState<StepDataType>({});

  const handleGenerate = async () => {
    if (firstValue && secondValue) {
      try {
        const response = await axios.post("/api/getdata", {
          num1: firstValue,
          num2: secondValue,
        });
        console.log("get data response: ", response);
        setStepData(response.data);
      } catch (e: any) {
        toast.error(e.response.data.error, {
          position: "top-right",
          autoClose: 5000,
          hideProgressBar: false,
          closeOnClick: true,
          pauseOnHover: true,
          draggable: true,
          progress: undefined,
          theme: "light",
        });
      }
    } else {
      toast.error("You have to type inputs exactly", {
        position: "top-right",
        autoClose: 5000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        progress: undefined,
        theme: "light",
      });
    }
  };

  const handleSave = async () => {
    if (firstValue && secondValue) {
      try {
        const response = await axios.post("/api/savedata", {
          num1: firstValue,
          num2: secondValue,
          steps: stepData,
        });

        toast.success(response.data.message, {
          position: "top-right",
          autoClose: 5000,
          hideProgressBar: false,
          closeOnClick: true,
          pauseOnHover: true,
          draggable: true,
          progress: undefined,
          theme: "light",
        });
      } catch (e: any) {
        toast.error(e.message, {
          position: "top-right",
          autoClose: 5000,
          hideProgressBar: false,
          closeOnClick: true,
          pauseOnHover: true,
          draggable: true,
          progress: undefined,
          theme: "light",
        });
      }
    } else {
      toast.error("You have to type inputs exactly", {
        position: "top-right",
        autoClose: 5000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        progress: undefined,
        theme: "light",
      });
    }
  };

  return (
    <>
      <Head>
        <title>Test Task</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.container}>
          <div className={styles.header}>
            <h1 className={font.className}>Step Addition</h1>
          </div>
          <div className={styles.content}>
            <div className={styles.input}>
              <label className={font.className}>First Number:</label>
              <input value={firstValue} type="number" onChange={(e) => setFirstValue(e.target.value)} />
            </div>
            <div className={styles.input}>
              <label className={font.className}>Second Number:</label>
              <input value={secondValue} type="number" onChange={(e) => setSecondValue(e.target.value)} />
            </div>
            <div className={styles.generateBtn} onClick={handleGenerate}>
              <span className={font.className}>Generate Steps</span>
            </div>
            <StepDescriptonPanel data={stepData} />
            <div className={styles.saveBtn} onClick={handleSave}>
              <span className={font.className}>Save results to DB</span>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
